ARG GOLANG_VERSION=1.23

FROM golang:${GOLANG_VERSION}-trixie AS builder

ARG DEPENDENCIES="\
    dpkg-dev \
    git \
    make \
    pkg-config\
    libseccomp-dev \
    gcc"

RUN --mount=type=cache,target=/var/cache/apt,sharing=locked \
    --mount=type=cache,target=/var/lib/apt,sharing=locked \
    set -ex \
    && rm -f /etc/apt/apt.conf.d/docker-clean \
    && echo 'Binary::apt::APT::Keep-Downloaded-Packages "true";' >/etc/apt/apt.conf.d/keep-cache \
    && apt-get update \
    && apt-get install -y ${DEPENDENCIES}

ARG ETCD_VERSION
ENV ETCD_VERSION=${ETCD_VERSION}

ARG WORKDIR=/opt/etcd

RUN set -ex \
    && git clone -b ${ETCD_VERSION} --depth=1 https://github.com/etcd-io/etcd ${WORKDIR}

ADD *.patch /opt/

WORKDIR ${WORKDIR}

RUN set -ex && \
    if [ -f server/etcdmain/etcd.go ]; then \
        sed -i '/runtime\.GOARCH == "amd64"/{N;/arm64/{N;s/runtime\.GOARCH == "arm64"/runtime.GOARCH == "arm64" || runtime.GOARCH == "loong64"/}}' server/etcdmain/etcd.go && \
        echo "‚úÖ loong64 Ê∑ªÂä†ÂÆåÊàê: server/etcdmain/etcd.go"; \
    else \
        echo "‚ö†Ô∏è  Ë∑≥Ëøá loong64 ÊèíÂÖ•ÔºåÊñá‰ª∂‰∏çÂ≠òÂú®Ôºöserver/etcdmain/etcd.go"; \
    fi && \
    if [ -f scripts/test_lib.sh ]; then \
        sed -i 's#run env GO111MODULE=off go get github.com/myitcv/gobin#go install github.com/myitcv/gobin@latest || exit 1#' scripts/test_lib.sh && \
        sed -i 's#GO111MODULE=off go get github.com/myitcv/gobin#go install github.com/myitcv/gobin@latest#' scripts/test_lib.sh && \
        echo "‚úÖ test_lib.sh ‰∏≠ go get ÊõøÊç¢ÂÆåÊàê"; \
    else \
        echo "‚ö†Ô∏è  Ë∑≥Ëøá test_lib.sh ÊõøÊç¢ÔºåÊñá‰ª∂‰∏çÂ≠òÂú®"; \
    fi

ENV ETCD_UNSUPPORTED_ARCH=loong64
ENV GO111MODULE=on

RUN --mount=type=cache,target=/go/pkg/mod \
    --mount=type=cache,target=/root/.cache/go-build \
    set -ex && \
    [ -d vendor ] && rm -rf vendor || echo "No vendor dir to remove" && \
    for dir in server tests etcdctl etcdutl tools; do \
      if [ -d "$dir" ]; then \
        if [ -f "$dir/go.mod" ]; then \
          echo "üì¶ Running go mod tidy in $dir"; \
          if [ "$dir" = "server" ]; then \
            echo "üîß Updating bbolt in $dir"; \
            (cd "$dir" && go get -u go.etcd.io/bbolt); \
          fi; \
          (cd "$dir" && go mod tidy); \
        else \
          echo "‚ö†Ô∏è  Skipping $dir: no go.mod found"; \
        fi; \
      else \
        echo "‚ö†Ô∏è  Skipping $dir: not found"; \
      fi; \
    done \
    && go get -u go.etcd.io/bbolt \
    && go mod tidy \
    && make build \
    && mkdir dist \
    && cp -f bin/* dist/

FROM ghcr.io/loong64/debian:trixie-slim

WORKDIR /opt/etcd

COPY --from=builder /opt/etcd/dist /opt/etcd/dist

VOLUME /dist

CMD cp -rf dist/* /dist/
